<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>49.0</apiVersion>
    <assignments>
        <name>addAndReset</name>
        <label>addAndReset</label>
        <locationX>625</locationX>
        <locationY>367</locationY>
        <assignmentItems>
            <assignToReference>productsCoveredToInsert</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newProductCovered</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>flatProductCovered</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>nextProductCovered</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>continue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>flatten</name>
        <label>flatten</label>
        <locationX>381</locationX>
        <locationY>211</locationY>
        <assignmentItems>
            <assignToReference>flatProductCovered</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>theVisit.Products_Covered__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>continue</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>setProductCoveredValues</name>
        <label>setProductCoveredValues</label>
        <locationX>456</locationX>
        <locationY>367</locationY>
        <assignmentItems>
            <assignToReference>newProductCovered.Name</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>thisProductCovered</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newProductCovered.Visit__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>visitId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>addAndReset</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>continue</name>
        <label>continue?</label>
        <locationX>541</locationX>
        <locationY>213</locationY>
        <defaultConnector>
            <targetReference>insertList</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>we&apos;re done</defaultConnectorLabel>
        <rules>
            <name>Yes</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>continueFormula</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>setProductCoveredValues</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>returnVisit</name>
        <label>returnVisit</label>
        <locationX>159</locationX>
        <locationY>215</locationY>
        <defaultConnector>
            <targetReference>flatten</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>first time</defaultConnectorLabel>
        <rules>
            <name>Count_Greater_Than_0</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>theVisit.Products_Covered_Count__c</leftValueReference>
                <operator>GreaterThan</operator>
                <rightValue>
                    <numberValue>0.0</numberValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>deleteOldData</targetReference>
            </connector>
            <label>Count Greater Than 0</label>
        </rules>
    </decisions>
    <formulas>
        <name>continueFormula</name>
        <dataType>Boolean</dataType>
        <expression>if(len({!flatProductCovered}) &gt; 0, true, false)</expression>
    </formulas>
    <formulas>
        <name>nextProductCovered</name>
        <dataType>String</dataType>
        <expression>if(FIND(&quot;;&quot;, {!flatProductCovered}) = 0, &quot;&quot;, RIGHT({!flatProductCovered},LEN({!flatProductCovered}) - FIND(&quot;;&quot;, {!flatProductCovered})))</expression>
    </formulas>
    <formulas>
        <name>thisProductCovered</name>
        <dataType>String</dataType>
        <expression>if(FIND(&quot;;&quot;, {!flatProductCovered}) = 0, {!flatProductCovered}, substitute(LEFT({!flatProductCovered}, FIND(&quot;;&quot;, {!flatProductCovered})),&quot;;&quot;,&quot;&quot;))</expression>
    </formulas>
    <interviewLabel>Visits - Products Discussed {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Visits - Products Discussed</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>insertList</name>
        <label>insertList</label>
        <locationX>749</locationX>
        <locationY>211</locationY>
        <inputReference>productsCoveredToInsert</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>deleteOldData</name>
        <label>deleteOldData</label>
        <locationX>273</locationX>
        <locationY>476</locationY>
        <connector>
            <targetReference>flatten</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Visit__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>visitId</elementReference>
            </value>
        </filters>
        <object>Product_Discussed1__c</object>
    </recordDeletes>
    <recordLookups>
        <name>getVisit</name>
        <label>getVisit</label>
        <locationX>167</locationX>
        <locationY>50</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>returnVisit</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>visitId</elementReference>
            </value>
        </filters>
        <object>Visit__c</object>
        <outputReference>theVisit</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Products_Covered__c</queriedFields>
        <queriedFields>Products_Covered_Count__c</queriedFields>
    </recordLookups>
    <start>
        <locationX>349</locationX>
        <locationY>32</locationY>
        <connector>
            <targetReference>getVisit</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <variables>
        <name>flatProductCovered</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>newProductCovered</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product_Discussed1__c</objectType>
    </variables>
    <variables>
        <name>productsCoveredToInsert</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Product_Discussed1__c</objectType>
    </variables>
    <variables>
        <name>theVisit</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Visit__c</objectType>
    </variables>
    <variables>
        <name>visitId</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
